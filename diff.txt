diff --git a/CMakeLists.txt b/CMakeLists.txt
index 44789cf..a290581 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,7 +3,7 @@ PROJECT (legit)
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 GET_FILENAME_COMPONENT(PROJECT_ROOT . ABSOLUTE)
 GET_FILENAME_COMPONENT(BUILD_ROOT ${CMAKE_CURRENT_BINARY_DIR} ABSOLUTE)
-SET(CMAKE_MODULE_PATH ${PROJECT_ROOT}/cmake)
+SET(CMAKE_MODULE_PATH ${PROJECT_ROOT}/cmakefiles)
 INCLUDE(LegitUtilities REQUIRED)
 INCLUDE(PlatformUtilities REQUIRED)
 
@@ -24,8 +24,6 @@ LEGIT_ADD_SOURCES(
 	src/common/image/integral.cpp
 	src/common/math/statistics.cpp
 	src/common/math/geometry.cpp
-	src/common/gui/gui.cpp
-	src/common/gui/window.cpp
 	src/common/canvas.cpp
     src/api/legit.cpp
     src/observers.cpp
@@ -80,8 +78,6 @@ IF(BUILD_TRAX)
  	ENDIF(TRAX_DEBUG)
 ENDIF(BUILD_TRAX)
 
-ADD_EXECUTABLE(legit_runner src/runner.cpp)
-TARGET_LINK_LIBRARIES(legit_runner legit)
 
 INSTALL(TARGETS legit LIBRARY DESTINATION lib)
 INSTALL(FILES src/api/legit.h DESTINATION include)
diff --git a/cmake/FindOpenCVWindows.cmake b/cmake/FindOpenCVWindows.cmake
deleted file mode 100644
index ae4783c..0000000
--- a/cmake/FindOpenCVWindows.cmake
+++ /dev/null
@@ -1,356 +0,0 @@
-# Module for locating OpenCV.
-#
-# Customizable variables:
-#   OPENCV_ROOT_DIR
-#     Specifies the OpenCV root directory.
-#
-#   OPENCV_USE_GPU_LIBS
-#     Indicates whether GPU enabled libraries should be located.
-#
-#   OPENCV_USE_STATIC_LIBS
-#     Indicates whether static instead of shared libraries should be located.
-#
-#   OPENCV_COMPILER
-#     The compiler name used to locate the libraries. Setting this variable is
-#     useful only if the OpenCV superack is being used with its default
-#     directory layout.
-#
-# Read-only variables:
-#   OPENCV_FOUND
-#     Indicates whether the library has been found.
-#
-#   OPENCV_INCLUDE_DIRS
-#     Specifies to the OpenCV include directory.
-#
-#   OPENCV_<COMPONENT>_FOUND
-#     Indicates whether the specified <COMPONENT> was found.
-#
-#   OPENCV_LIBRARIES
-#     Specifies the OpenCV libraries that should be passed to
-#     target_link_libararies.
-#
-#
-# Copyright (c) 2012 Sergiu Dotenco
-#
-# Permission is hereby granted, free of charge, to any person obtaining a copy
-# of this software and associated documentation files (the "Software"), to deal
-# in the Software without restriction, including without limitation the rights
-# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-# copies of the Software, and to permit persons to whom the Software is
-# furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in all
-# copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTOPENCVLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-# SOFTWARE.
-
-INCLUDE (FindPackageHandleStandardArgs)
-
-IF (CMAKE_VERSION VERSION_GREATER 2.8.7)
-  SET (_OPENCV_CHECK_COMPONENTS FALSE)
-ELSE (CMAKE_VERSION VERSION_GREATER 2.8.7)
-  SET (_OPENCV_CHECK_COMPONENTS TRUE)
-ENDIF (CMAKE_VERSION VERSION_GREATER 2.8.7)
-
-FIND_PATH (OPENCV_ROOT_DIR
-  NAMES OpenCVConfig.cmake include/opencv/cv.h include/cv/cv.h
-        include/opencv2/opencv.hpp
-  PATHS ENV OPENCVROOT
-  DOC "OpenCV root directory")
-
-IF (OPENCV_USE_STATIC_LIBS)
-  SET (_OPENCV_LIB_DIR staticlib)
-ELSE (OPENCV_USE_STATIC_LIBS)
-  SET (_OPENCV_LIB_DIR lib)
-ENDIF (OPENCV_USE_STATIC_LIBS)
-
-SET (_OPENCV_POSSIBLE_LIB_SUFFIXES ${_OPENCV_LIB_DIR})
-
-IF (DEFINED OPENCV_COMPILER)
-  SET (_OPENCV_COMPILER ${OPENCV_COMPILER})
-ELSEIF (MSVC11)
-  SET (_OPENCV_COMPILER vc11)
-ELSEIF (MSVC10)
-  SET (_OPENCV_COMPILER vc10)
-ELSEIF (MSVC90)
-  SET (_OPENCV_COMPILER vc9)
-ELSEIF (MSVC80)
-  SET (_OPENCV_COMPILER vc8)
-ELSEIF (MSVC71)
-  SET (_OPENCV_COMPILER vc71)
-ELSEIF (MSVC70)
-  SET (_OPENCV_COMPILER vc7)
-ELSEIF (MSVC60)
-  SET (_OPENCV_COMPILER vc6)
-ELSEIF (MINGW)
-  SET (_OPENCV_COMPILER mingw)
-ENDIF (DEFINED OPENCV_COMPILER)
-
-IF (OPENCV_USE_GPU_LIBS)
-  SET (_OPENCV_BUILD_DIR build/gpu)
-ELSE (OPENCV_USE_GPU_LIBS)
-  SET (_OPENCV_BUILD_DIR build)
-ENDIF (OPENCV_USE_GPU_LIBS)
-
-IF (DEFINED _OPENCV_COMPILER)
-  IF (CMAKE_SIZEOF_VOID_P EQUAL 8)
-    SET (_OPENCV_ARCHITECTURE x64)
-  ELSEIF (CMAKE_SIZEOF_VOID_P EQUAL 4)
-    SET (_OPENCV_ARCHITECTURE x86)
-  ENDIF (CMAKE_SIZEOF_VOID_P EQUAL 8)
-
-  IF (OPENCV_USE_GPU_LIBS)
-    LIST (APPEND _OPENCV_LIB_HINTS
-      ${OPENCV_ROOT_DIR}/${_OPENCV_BUILD_DIR}/${_OPENCV_ARCHITECTURE}/${_OPENCV_LIB_DIR})
-  ELSE (OPENCV_USE_GPU_LIBS)
-    LIST (APPEND _OPENCV_LIB_HINTS
-      ${OPENCV_ROOT_DIR}/${_OPENCV_BUILD_DIR}/${_OPENCV_ARCHITECTURE}/${_OPENCV_COMPILER}/${_OPENCV_LIB_DIR})
-  ENDIF (OPENCV_USE_GPU_LIBS)
-ENDIF (DEFINED _OPENCV_COMPILER)
-
-LIST (APPEND _OPENCV_LIB_HINTS ${OPENCV_ROOT_DIR})
-
-FIND_PATH (OPENCV_INCLUDE_DIR
-  NAMES opencv/cv.h opencv2/opencv.hpp
-  HINTS ${OPENCV_ROOT_DIR}/build ${OPENCV_ROOT_DIR}
-  PATH_SUFFIXES include
-  DOC "OpenCV include directory")
-
-IF (OPENCV_ROOT_DIR)
-  FIND_PACKAGE (OpenCV NO_MODULE QUIET HINTS ${OPENCV_ROOT_DIR}
-    NO_CMAKE_PACKAGE_REGISTRY)
-
-  FIND_FILE (OPENCV_CONFIG NAMES OpenCVConfig.cmake
-    HINTS ${OPENCV_ROOT_DIR} ${OpenCV_DIR}
-    DOC "OpenCV CMake configuration" NO_DEFAULT_PATH)
-
-  MARK_AS_ADVANCED (OpenCV_DIR OPENCV_CONFIG)
-
-  IF (OPENCV_CONFIG)
-    # Use the configuration bundled with OpenCV
-    INCLUDE (${OPENCV_CONFIG})
-
-    SET (OPENCV_VERSION_MAJOR ${OpenCV_VERSION_MAJOR})
-    SET (OPENCV_VERSION_MINOR ${OpenCV_VERSION_MINOR})
-    SET (OPENCV_VERSION_PATCH ${OpenCV_VERSION_PATCH})
-    SET (OPENCV_VERSION ${OpenCV_VERSION})
-    SET (OPENCV_VERSION_COUNT 3)
-
-    # Search for a specific version
-    SET (_OPENCV_PREFERRED_SUFFIX
-      ${OPENCV_VERSION_MAJOR}${OPENCV_VERSION_MINOR}${OPENCV_VERSION_PATCH})
-    # Otherwise it try to guess it.
-  ELSE (OPENCV_CONFIG)
-    FIND_FILE (OPENCV_VERSION_HEADER NAMES cvver.h version.hpp HINTS
-      ${OPENCV_INCLUDE_DIR} PATH_SUFFIXES opencv opencv2/core)
-
-    IF (OPENCV_VERSION_HEADER)
-      SET (OPENCV_VERSION_HEADER ${OPENCV_VERSION_HEADER} CACHE INTERNAL
-        "OpenCV version header" FORCE)
-
-      # Find OpenCV version by looking at cvver.h or version.hpp
-      FILE (STRINGS ${OPENCV_VERSION_HEADER}
-        _OPENCV_VERSION_STRING REGEX "^#define CV_[A-Z]+_VERSION[ \t]+[0-9]+$")
-
-      STRING (REGEX REPLACE ".*#define CV_MAJOR_VERSION[ \t]+([0-9]+).*" "\\1"
-        OPENCV_VERSION_MAJOR ${_OPENCV_VERSION_STRING})
-      STRING (REGEX REPLACE ".*#define CV_MINOR_VERSION[ \t]+([0-9]+).*" "\\1"
-        OPENCV_VERSION_MINOR ${_OPENCV_VERSION_STRING})
-      STRING (REGEX REPLACE ".*#define CV_SUBMINOR_VERSION[ \t]+([0-9]+).*"
-        "\\1" OPENCV_VERSION_PATCH ${_OPENCV_VERSION_STRING})
-
-      SET (_OPENCV_PREFERRED_SUFFIX
-        ${OPENCV_VERSION_MAJOR}${OPENCV_VERSION_MINOR}${OPENCV_VERSION_PATCH})
-
-      SET (OPENCV_VERSION
-        ${OPENCV_VERSION_MAJOR}.${OPENCV_VERSION_MINOR}.${OPENCV_VERSION_PATCH})
-      SET (OPENCV_VERSION_COUNT 3)
-    ENDIF (OPENCV_VERSION_HEADER)
-  ENDIF (OPENCV_CONFIG)
-
-  SET (_OPENCV_DETECTED_SUFFIX
-    ${OPENCV_VERSION_MAJOR}${OPENCV_VERSION_MINOR}${OPENCV_VERSION_PATCH})
-
-  IF (NOT OpenCV_FIND_COMPONENTS)
-    IF (OPENCV_VERSION VERSION_GREATER 2.1)
-      SET (OpenCV_FIND_COMPONENTS calib3d contrib core features2d flann highgui
-        imgproc legacy ml objdetect video)
-    ELSE (OPENCV_VERSION VERSION_GREATER 2.1)
-      SET (OpenCV_FIND_COMPONENTS cxcore cv ml highgui cvaux)
-    ENDIF (OPENCV_VERSION VERSION_GREATER 2.1)
-  ENDIF (NOT OpenCV_FIND_COMPONENTS)
-
-  # Loop over each components
-  FOREACH (_OPENCV_COMPONENT ${OpenCV_FIND_COMPONENTS})
-    SET (_OPENCV_COMPONENT_BASE opencv_${_OPENCV_COMPONENT})
-
-    SET (_OPENCV_COMPONENT_POSSIBLE_DEBUG_NAMES
-         ${_OPENCV_COMPONENT_BASE}d
-         ${_OPENCV_COMPONENT_BASE}${_OPENCV_DETECTED_SUFFIX}d
-         ${_OPENCV_COMPONENT_BASE}d
-         ${_OPENCV_COMPONENT_BASE}${_OPENCV_DETECTED_SUFFIX}d)
-    SET (_OPENCV_COMPONENT_POSSIBLE_RELEASE_NAMES
-         ${_OPENCV_COMPONENT_BASE}
-         ${_OPENCV_COMPONENT_BASE}${_OPENCV_DETECTED_SUFFIX}
-         ${_OPENCV_COMPONENT_BASE}
-         ${_OPENCV_COMPONENT_BASE}${_OPENCV_DETECTED_SUFFIX})
-
-    STRING (TOUPPER ${_OPENCV_COMPONENT} _OPENCV_COMPONENT_UPPER)
-    SET (_OPENCV_LIBRARY_BASE OPENCV_${_OPENCV_COMPONENT_UPPER}_LIBRARY)
-
-    FIND_LIBRARY (${_OPENCV_LIBRARY_BASE}_DEBUG
-      NAMES ${_OPENCV_COMPONENT_POSSIBLE_DEBUG_NAMES}
-      HINTS ${_OPENCV_LIB_HINTS}
-      PATH_SUFFIXES ${_OPENCV_POSSIBLE_LIB_SUFFIXES}
-      DOC "OpenCV ${_OPENCV_COMPONENT} debug library")
-
-    FIND_LIBRARY (${_OPENCV_LIBRARY_BASE}_RELEASE
-      NAMES ${_OPENCV_COMPONENT_POSSIBLE_RELEASE_NAMES}
-      HINTS ${_OPENCV_LIB_HINTS}
-      PATH_SUFFIXES ${_OPENCV_POSSIBLE_LIB_SUFFIXES}
-      DOC "OpenCV ${_OPENCV_COMPONENT} release library")
-
-    IF (${_OPENCV_LIBRARY_BASE}_DEBUG)
-      LIST (APPEND _OPENCV_ALL_LIBS ${${_OPENCV_LIBRARY_BASE}_DEBUG})
-    ENDIF (${_OPENCV_LIBRARY_BASE}_DEBUG)
-
-    IF (${_OPENCV_LIBRARY_BASE}_RELEASE)
-      LIST (APPEND _OPENCV_ALL_LIBS ${${_OPENCV_LIBRARY_BASE}_RELEASE})
-    ENDIF (${_OPENCV_LIBRARY_BASE}_RELEASE)
-
-    SET (OPENCV_${_OPENCV_COMPONENT_UPPER}_FOUND TRUE)
-
-    # Debug and release
-    IF (${_OPENCV_LIBRARY_BASE}_DEBUG AND ${_OPENCV_LIBRARY_BASE}_RELEASE)
-      SET (${_OPENCV_LIBRARY_BASE}
-        debug ${${_OPENCV_LIBRARY_BASE}_DEBUG}
-        optimized ${${_OPENCV_LIBRARY_BASE}_RELEASE} CACHE DOC
-        "OpenCV ${_OPENCV_COMPONENT} library")
-      # Debug only
-    ELSEIF (${_OPENCV_LIBRARY_BASE}_DEBUG)
-      SET (${_OPENCV_LIBRARY_BASE} ${${_OPENCV_LIBRARY_BASE}_DEBUG} CACHE DOC
-        "OpenCV ${_OPENCV_COMPONENT} library")
-      # Release only
-    ELSEIF (${_OPENCV_LIBRARY_BASE}_RELEASE)
-      SET (${_OPENCV_LIBRARY_BASE} ${${_OPENCV_LIBRARY_BASE}_RELEASE} CACHE DOC
-        "OpenCV ${_OPENCV_COMPONENT} library")
-    ELSE (${_OPENCV_LIBRARY_BASE}_DEBUG AND ${_OPENCV_LIBRARY_BASE}_RELEASE)
-      # Component missing: record it for a later report
-      LIST (APPEND _OPENCV_MISSING_COMPONENTS ${_OPENCV_COMPONENT})
-      LIST (APPEND _OPENCV_MISSING_LIBRARIES ${_OPENCV_LIBRARY_BASE})
-      SET (OPENCV_${_OPENCV_COMPONENT_UPPER}_FOUND FALSE)
-    ENDIF (${_OPENCV_LIBRARY_BASE}_DEBUG AND ${_OPENCV_LIBRARY_BASE}_RELEASE)
-
-    MARK_AS_ADVANCED (${_OPENCV_LIBRARY_BASE} ${_OPENCV_LIBRARY_BASE}_DEBUG
-      ${_OPENCV_LIBRARY_BASE}_RELEASE)
-
-    SET (OpenCV_${_OPENCV_COMPONENT}_FOUND
-      ${OPENCV_${_OPENCV_COMPONENT_UPPER}_FOUND})
-
-    # Make sure only libraries that have been actually found are registered
-    IF (${_OPENCV_LIBRARY_BASE})
-      LIST (APPEND _OPENCV_LIBRARIES ${${_OPENCV_LIBRARY_BASE}})
-    ENDIF (${_OPENCV_LIBRARY_BASE})
-  ENDFOREACH (_OPENCV_COMPONENT)
-
-  IF (NOT DEFINED _OPENCV_MISSING_COMPONENTS)
-    # Success: all components were found
-    LIST (APPEND OPENCV_LIBRARIES ${_OPENCV_LIBRARIES})
-  ELSE (NOT DEFINED _OPENCV_MISSING_COMPONENTS AND _OPENCV_CHECK_COMPONENTS)
-    IF (NOT OpenCV_FIND_QUIETLY)
-      MESSAGE (STATUS "One or more OpenCV components were not found:")
-      # Display missing components indented, each on a separate line
-      FOREACH (_OPENCV_MISSING_COMPONENT ${_OPENCV_MISSING_COMPONENTS})
-        MESSAGE (STATUS "  " ${_OPENCV_MISSING_COMPONENT})
-      ENDFOREACH (_OPENCV_MISSING_COMPONENT ${_OPENCV_MISSING_COMPONENTS})
-    ENDIF (NOT OpenCV_FIND_QUIETLY)
-  ENDIF (NOT DEFINED _OPENCV_MISSING_COMPONENTS)
-
-  SET (OPENCV_INCLUDE_DIRS ${OPENCV_INCLUDE_DIR})
-ENDIF (OPENCV_ROOT_DIR)
-
-IF (WIN32)
-  FIND_PROGRAM (LIB_EXECUTABLE NAMES lib
-    HINTS "$ENV{VS110COMNTOOLS}/../../VC/bin"
-          "$ENV{VS100COMNTOOLS}/../../VC/bin"
-          "$ENV{VS90COMNTOOLS}/../../VC/bin"
-          "$ENV{VS71COMNTOOLS}/../../VC/bin"
-          "$ENV{VS80COMNTOOLS}/../../VC/bin"
-    DOC "Library manager")
-
-  MARK_AS_ADVANCED (LIB_EXECUTABLE)
-ENDIF (WIN32)
-
-MACRO (GET_LIB_REQUISITES LIB REQUISITES)
-  IF (LIB_EXECUTABLE)
-    GET_FILENAME_COMPONENT (_LIB_PATH ${LIB_EXECUTABLE} PATH)
-
-    EXECUTE_PROCESS (COMMAND ${LIB_EXECUTABLE} /nologo /list
-      ${LIB} OUTPUT_VARIABLE _LIB_OUTPUT ERROR_QUIET
-      WORKING_DIRECTORY ${_LIB_PATH}/../../Common7/IDE)
-
-    STRING (REPLACE "\n" ";" ${REQUISITES} ${_LIB_OUTPUT})
-    LIST (REMOVE_DUPLICATES ${REQUISITES})
-  ENDIF (LIB_EXECUTABLE)
-ENDMACRO (GET_LIB_REQUISITES)
-
-IF (_OPENCV_ALL_LIBS)
-  # collect lib requisites using the lib tool
-  FOREACH (_OPENCV_COMPONENT ${_OPENCV_ALL_LIBS})
-    GET_LIB_REQUISITES (${_OPENCV_COMPONENT} _OPENCV_REQUISITES)
-  ENDFOREACH (_OPENCV_COMPONENT)
-ENDIF (_OPENCV_ALL_LIBS)
-
-IF (NOT OPENCV_BINARY_DIR)
-  SET (_OPENCV_UPDATE_BINARY_DIR TRUE)
-ELSE (NOT OPENCV_BINARY_DIR)
-  SET (_OPENCV_UPDATE_BINARY_DIR FALSE)
-ENDIF (NOT OPENCV_BINARY_DIR)
-
-SET (_OPENCV_BINARY_DIR_HINTS ${OPENCV_ROOT_DIR}/bin)
-
-IF (_OPENCV_ALL_LIBS)
-  LIST (GET _OPENCV_ALL_LIBS 0 _OPENCV_LIB)
-  # extract the path to the lib directory
-  GET_FILENAME_COMPONENT (_OPENCV_LIB ${_OPENCV_LIB} PATH)
-  # extract the path to lib's parent directory
-  GET_FILENAME_COMPONENT (_OPENCV_COMMON_DIR ${_OPENCV_LIB}/.. ABSOLUTE)
-
-  LIST (APPEND _OPENCV_BINARY_DIR_HINTS ${_OPENCV_COMMON_DIR}/bin)
-ENDIF (_OPENCV_ALL_LIBS)
-
-FIND_PROGRAM (OPENCV_BINARY_DIR
-  NAMES opencv_haartraining opencv_performance opencv_stitching
-        opencv_createsamples
-  HINTS ${_OPENCV_BINARY_DIR_HINTS})
-
-IF (_OPENCV_REQUISITES)
-  FIND_FILE (OPENCV_BINARY_DIR NAMES ${_OPENCV_REQUISITES}
-    HINTS ${_OPENCV_BINARY_DIR_HINTS})
-ENDIF (_OPENCV_REQUISITES)
-
-IF (OPENCV_BINARY_DIR AND _OPENCV_UPDATE_BINARY_DIR)
-  SET (_OPENCV_BINARY_DIR ${OPENCV_BINARY_DIR})
-  UNSET (OPENCV_BINARY_DIR CACHE)
-
-  GET_FILENAME_COMPONENT (OPENCV_BINARY_DIR ${_OPENCV_BINARY_DIR} PATH)
-ENDIF (OPENCV_BINARY_DIR AND _OPENCV_UPDATE_BINARY_DIR)
-
-SET (OPENCV_BINARY_DIR ${OPENCV_BINARY_DIR} CACHE PATH
-  "OpenCV binary directory")
-
-MARK_AS_ADVANCED (OPENCV_BINARY_DIR OPENCV_INCLUDE_DIR)
-
-IF (NOT _OPENCV_CHECK_COMPONENTS)
-  SET (_OPENCV_FPHSA_ADDITIONAL_ARGS HANDLE_COMPONENTS)
-ENDIF (NOT _OPENCV_CHECK_COMPONENTS)
-
-FIND_PACKAGE_HANDLE_STANDARD_ARGS (OpenCV REQUIRED_VARS OPENCV_ROOT_DIR
-  OPENCV_INCLUDE_DIR ${_OPENCV_MISSING_LIBRARIES} VERSION_VAR OPENCV_VERSION
-  ${_OPENCV_FPHSA_ADDITIONAL_ARGS})
\ No newline at end of file
diff --git a/cmake/LegitUtilities.cmake b/cmake/LegitUtilities.cmake
deleted file mode 100644
index 02b74e1..0000000
--- a/cmake/LegitUtilities.cmake
+++ /dev/null
@@ -1,81 +0,0 @@
-# -*- Mode: CMake; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- */
-
-MACRO(LEGIT_GENERATE_HEADERS DST)
-
-    SET(TRACKERS_FILE "${DST}/trackers.h")
-
-    FILE(WRITE "${TRACKERS_FILE}" "// Autogenerated file, do not edit! \n")
-
-    FOREACH(TRACKER_HEADER ${LEGIT_TRACKERS})
-
-        GET_SOURCE_FILE_PROPERTY(TRACKER_CLASS ${TRACKER_HEADER} LEGIT_TRACKER)
-
-       # MESSAGE("Register: ${TRACKER_CLASS}")
-
-        FILE(APPEND "${TRACKERS_FILE}" "#include \"${TRACKER_HEADER}\"\n")
-
-    ENDFOREACH(TRACKER_HEADER)
-
-    SET(CONFIG_FILE "${DST}/config.h")
-
-    FILE(WRITE "${CONFIG_FILE}" "// Autogenerated file, do not edit!\n string _legit_builtin_config[] = { \n")
-
-    FOREACH(CFG_FILE ${LEGIT_CONFIGURATION})
-
-        GET_FILENAME_COMPONENT(CFG_NAME "${CFG_FILE}" NAME_WE)
-
-        FILE(READ "${CFG_FILE}" CONTENT)
-        STRING(REPLACE "\n" "\\n" CONTENT "${CONTENT}")
-
-        FILE(APPEND "${CONFIG_FILE}" " \"${CFG_NAME}\", \"${CONTENT}\", \n")
-
-    ENDFOREACH(CFG_FILE)
-
-    FILE(APPEND "${CONFIG_FILE}" " \"\" \n }; \n")
-
-ENDMACRO(LEGIT_GENERATE_HEADERS)
-
-
-MACRO (LEGIT_ADD_SOURCES)
-    FILE (RELATIVE_PATH _relPath "${CMAKE_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}")
-    FOREACH (_src ${ARGN})
-        IF (_relPath)
-            LIST (APPEND LEGIT_SOURCES "${_relPath}/${_src}")
-        ELSE (_relPath)
-            LIST (APPEND LEGIT_SOURCES "${_src}")
-        ENDIF (_relPath)
-    ENDFOREACH()
-    IF (_relPath)
-        SET (LEGIT_SOURCES ${LEGIT_SOURCES} PARENT_SCOPE)
-    ENDIF(_relPath)
-ENDMACRO (LEGIT_ADD_SOURCES)
-
-
-MACRO (LEGIT_REGISTER_TRACKER HEADER TRACKER)
-    FILE (RELATIVE_PATH _relPath "${CMAKE_SOURCE_DIR}/src" "${CMAKE_CURRENT_SOURCE_DIR}")
-    IF (_relPath)
-        LIST (APPEND LEGIT_TRACKERS "${_relPath}/${HEADER}")
-        SET_SOURCE_FILES_PROPERTIES("${_relPath}/${HEADER}" PROPERTIES LEGIT_TRACKER $TRACKER)
-    ELSE (_relPath)
-        LIST (APPEND LEGIT_TRACKERS "${HEADER}")
-        SET_SOURCE_FILES_PROPERTIES("${HEADER}" PROPERTIES LEGIT_TRACKER $TRACKER)
-    ENDIF (_relPath)
-    IF (_relPath)
-        SET (LEGIT_TRACKERS ${LEGIT_TRACKERS} PARENT_SCOPE)
-    ENDIF(_relPath)
-ENDMACRO (LEGIT_REGISTER_TRACKER)
-
-MACRO (LEGIT_REGISTER_CONFIGURATION CONFIG)
-    FILE (RELATIVE_PATH _relPath "${CMAKE_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}")
-    LIST (APPEND LEGIT_CONFIGURATION "${CMAKE_CURRENT_SOURCE_DIR}/${HEADER}")
-    IF (_relPath)
-        SET (LEGIT_CONFIGURATION ${LEGIT_CONFIGURATION} PARENT_SCOPE)
-    ENDIF(_relPath)
-ENDMACRO (LEGIT_REGISTER_CONFIGURATION)
-
-
-MACRO (LEGIT_PROPAGATE)
-SET (LEGIT_CONFIGURATION ${LEGIT_CONFIGURATION} PARENT_SCOPE)
-SET (LEGIT_TRACKERS ${LEGIT_TRACKERS} PARENT_SCOPE)
-SET (LEGIT_SOURCES ${LEGIT_SOURCES} PARENT_SCOPE)
-ENDMACRO (LEGIT_PROPAGATE)
\ No newline at end of file
diff --git a/cmake/PlatformUtilities.cmake b/cmake/PlatformUtilities.cmake
deleted file mode 100644
index 34e6ba0..0000000
--- a/cmake/PlatformUtilities.cmake
+++ /dev/null
@@ -1,30 +0,0 @@
-
-CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
-
-SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
-SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
-
-IF(WIN32)
-	ADD_DEFINITIONS(-DPLATFORM_WINDOWS)
-	FIND_PACKAGE(OpenCVWindows REQUIRED)
-	SET(OpenCV_INCLUDE_DIR ${OPENCV_INCLUDE_DIR})
-	SET(OpenCV_LIBS "${OPENCV_CORE_LIBRARY};${OPENCV_IMGPROC_LIBRARY};${OPENCV_VIDEO_LIBRARY};${OPENCV_HIGHGUI_LIBRARY}")
-	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
-ELSEIF(APPLE)  
-	ADD_DEFINITIONS(-DPLATFORM_OSX)
-	FIND_PACKAGE(OpenCV REQUIRED core imgproc video highgui)
-	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
-ELSEIF(UNIX)
-	# TODO: Probably some distribution of Linux, but could be improved
-	ADD_DEFINITIONS(-DPLATFORM_LINUX)
-	FIND_PACKAGE(OpenCV REQUIRED core imgproc video highgui)
-	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
-ELSE()
-	MESSAGE(FATAL_ERROR "Unrecognized platform")
-ENDIF()
-
-SET(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -ffast-math -O3") 
-SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffast-math -O3")
-
-LINK_LIBRARIES(${OpenCV_LIBS})
-INCLUDE_DIRECTORIES(AFTER ${CMAKE_CURRENT_BINARY_DIR} ${OpenCV_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/src)
diff --git a/config/lgt_tpami2013.cfg b/config/lgt_tpami2013.cfg
index 501703a..6bc9803 100644
--- a/config/lgt_tpami2013.cfg
+++ b/config/lgt_tpami2013.cfg
@@ -10,7 +10,7 @@ tracker = lgt
 tracker.focus = false
 tracker.verbosity = 2
 
-size = 50
+size = 20000
 
 # Patch settings
 patch.scale = 1.0
@@ -82,4 +82,3 @@ cue3.lk.window=8
 cue3.lk.layers 2
 #cue3.harris_threshold = 20
 #cue3.damping = 1
-
diff --git a/src/api/CMakeLists.txt b/src/api/CMakeLists.txt
index dcd21c8..d0e7f3f 100644
--- a/src/api/CMakeLists.txt
+++ b/src/api/CMakeLists.txt
@@ -1,9 +1,3 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
 
-SET(BUILD_API TRUE CACHE BOOL "Enable Legit C/C++ API")
-
-IF (BUILD_API)
-
-	LEGIT_ADD_SOURCES(legit.cpp)
-
-ENDIF (BUILD_API)
+LEGIT_ADD_SOURCES(legit.cpp)
diff --git a/src/api/legit.cpp b/src/api/legit.cpp
index 8d7b706..364226b 100644
--- a/src/api/legit.cpp
+++ b/src/api/legit.cpp
@@ -38,7 +38,7 @@ bool __random_init = false;
 class LegitTracker::Impl
 {
 public:
-  Impl() : image(), initialized(false), tracker(NULL)
+  Impl() : image(), initialized(false), tracker()
   {
 
     if (!__random_init)
@@ -231,13 +231,13 @@ extern "C" {
 
   void legit_tracker_initialize(CLegitTracker *t, const CvMat* image, CvRect region)
   {
-    cv::Mat mat(image);
+    cv::Mat mat = cv::cvarrToMat(image);
     t->initialize( mat, (cv::Rect)region);
   }
 
   void legit_tracker_update(CLegitTracker *t, const CvMat* image)
   {
-    cv::Mat mat(image);
+    cv::Mat mat = cv::cvarrToMat(image);
     t->update(mat);
   }
 
@@ -265,7 +265,8 @@ extern "C" {
 
   void legit_tacker_visualize(CLegitTracker *t, const CvMat* canvas)
   {
-    cv::Mat mat(canvas);
+
+   cv::Mat mat = cv::cvarrToMat(canvas);
     t->visualize(mat);
   }
 
diff --git a/src/common/gui/gui.cpp b/src/common/gui/gui.cpp
index 6d56826..82e2b5f 100644
--- a/src/common/gui/gui.cpp
+++ b/src/common/gui/gui.cpp
@@ -312,7 +312,7 @@ Menu::Menu(vector<string> ch, void (*cb)(int)) : menuSize(0, 0), buttonSize(0, 0
   for (int i = 0; i < ch.size(); i++)
     {
       int baseline = 0;
-      Size sz = getTextSize(ch[i].c_str(), FONT_HERSHEY_SIMPLEX, 0.4, 1, &baseline);
+      Size sz = cv::getTextSize(ch[i].c_str(), FONT_HERSHEY_SIMPLEX, 0.4, 1, &baseline);
 
       buttonSize.width = MAX(buttonSize.width, sz.width);
       buttonSize.height = MAX(buttonSize.height, sz.height);
@@ -388,4 +388,4 @@ bool Menu::handle_key(int key)
 
 }
 
-}
\ No newline at end of file
+}
diff --git a/src/trackers/basic/CMakeLists.txt b/src/trackers/basic/CMakeLists.txt
index 9e5c1d8..e7acd1c 100644
--- a/src/trackers/basic/CMakeLists.txt
+++ b/src/trackers/basic/CMakeLists.txt
@@ -4,4 +4,4 @@ LEGIT_ADD_SOURCES(
   static.cpp
 )
 
-LEGIT_REGISTER_TRACKER(static.h StaticTracker)
+LEGIT_REGISTER_TRACKER(static.h StaticTracker basic)
diff --git a/src/trackers/basic/static.h b/src/trackers/basic/static.h
index e1182b9..fa920c1 100644
--- a/src/trackers/basic/static.h
+++ b/src/trackers/basic/static.h
@@ -80,4 +80,4 @@ private:
 REGISTER_TRACKER(StaticTracker, "static");
 #endif
 
-#endif
\ No newline at end of file
+#endif
diff --git a/src/trackers/lgt/CMakeLists.txt b/src/trackers/lgt/CMakeLists.txt
index c30965b..11b2611 100644
--- a/src/trackers/lgt/CMakeLists.txt
+++ b/src/trackers/lgt/CMakeLists.txt
@@ -1,20 +1,20 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 
-LEGIT_ADD_SOURCES( 
-	lgt.cpp 
-	patches/patchset.cpp 
+LEGIT_ADD_SOURCES(
+	lgt.cpp
+	patches/patchset.cpp
 	patches/patch.cpp
-	optimization/optimization.cpp 
-	optimization/crossentropy.cpp 
-	modalities/modalities.cpp 
-	modalities/color.cpp 
-	modalities/shape.cpp 
+	optimization/optimization.cpp
+	optimization/crossentropy.cpp
+	modalities/modalities.cpp
+	modalities/color.cpp
+	modalities/shape.cpp
 	modalities/motion.cpp
 	external/delaunay.cpp
-    external/triangle.c 
+    external/triangle.c
     external/chainhull.cpp
 )
 
-LEGIT_REGISTER_TRACKER(lgt.h LGTTracker)
+LEGIT_REGISTER_TRACKER(lgt.h LGTTracker lgt)
 
 LEGIT_REGISTER_CONFIGURATION(config/lgt.cfg)
diff --git a/src/trackers/lgt/external/delaunay.h b/src/trackers/lgt/external/delaunay.h
index 547b892..3362cec 100644
--- a/src/trackers/lgt/external/delaunay.h
+++ b/src/trackers/lgt/external/delaunay.h
@@ -4,7 +4,10 @@
 
 #include <vector>
 
-#include <opencv2/core/core.hpp>
+#include "opencv2/core.hpp"
+#include "opencv2/imgproc.hpp"
+#include "opencv2/highgui.hpp"
+
 
 using namespace std;
 using namespace cv;
@@ -17,4 +20,4 @@ void delaunay_neihgbours(Point2f* points, int size, vector<vector<int> >& neighb
 
 void fillconvex(Mat& image, Point2f* points, int count, Scalar color);
 
-#endif
\ No newline at end of file
+#endif
diff --git a/src/trackers/lgt/modalities/motion.cpp b/src/trackers/lgt/modalities/motion.cpp
index 91c8e7a..4073c84 100644
--- a/src/trackers/lgt/modalities/motion.cpp
+++ b/src/trackers/lgt/modalities/motion.cpp
@@ -37,6 +37,8 @@ namespace tracker
 #define OPTICALFLOW_MAX_RESIDUE 1e5
 #define MOTION_LK_SIZE 55
 
+
+
 ModalityMotionLK::ModalityMotionLK(Config& config, string configbase) : Modality(config, configbase), step(2), history(step, step), motion(step, step)
 {
 
@@ -52,7 +54,9 @@ ModalityMotionLK::ModalityMotionLK(Config& config, string configbase) : Modality
 
   float sigma = 0.3*(MOTION_LK_SIZE/2 - 1) + 0.8;
 
-  gaussian = createGaussianFilter(CV_32F, Size(MOTION_LK_SIZE, MOTION_LK_SIZE), sigma, sigma);
+//  gaussian = createGaussianFilter(CV_32F, Size(MOTION_LK_SIZE, MOTION_LK_SIZE), sigma, sigma);
+//  GaussianBlur(CV_32F,CV_32F, Size(MOTION_LK_SIZE, MOTION_LK_SIZE), sigma, 0)
+
 
   DEBUGMSG("Motion LK: sigma %f, size %d\n", sigma, MOTION_LK_SIZE);
 
@@ -223,7 +227,15 @@ void ModalityMotionLK::probability(Image& image, Mat& p)
   else
     {
       Mat c = map(image.get_roi());
-      gaussian->apply(c, p);
+
+
+      //gaussian->apply(c, p);
+      //  gaussian = createGaussianFilter(CV_32F, Size(MOTION_LK_SIZE, MOTION_LK_SIZE), sigma, sigma);
+
+      float sigma = 0.3*(MOTION_LK_SIZE/2 - 1) + 0.8;
+
+        GaussianBlur(c,p, Size(MOTION_LK_SIZE, MOTION_LK_SIZE), sigma, 0);
+
       //p *= -1;
       //p += 1;
     }
@@ -234,5 +246,3 @@ void ModalityMotionLK::probability(Image& image, Mat& p)
 }
 
 }
-
-
diff --git a/src/trackers/lgt/modalities/motion.h b/src/trackers/lgt/modalities/motion.h
index 5a5206c..5521372 100644
--- a/src/trackers/lgt/modalities/motion.h
+++ b/src/trackers/lgt/modalities/motion.h
@@ -65,7 +65,7 @@ private:
   int levels;
   int window_size;
 
-  Ptr<FilterEngine> gaussian;
+  //Ptr<FilterEngine> gaussian;
 
   Mat map;
 };
@@ -74,4 +74,4 @@ private:
 
 }
 
-#endif
\ No newline at end of file
+#endif
diff --git a/src/trackers/opencv/CMakeLists.txt b/src/trackers/opencv/CMakeLists.txt
index 6ae188d..07d8e44 100644
--- a/src/trackers/opencv/CMakeLists.txt
+++ b/src/trackers/opencv/CMakeLists.txt
@@ -7,5 +7,5 @@ LEGIT_ADD_SOURCES(
   wrappers.cpp
 )
 
-LEGIT_REGISTER_TRACKER(wrappers.h OnlineBoostingTracker)
-LEGIT_REGISTER_TRACKER(wrappers.h MILTracker)
+LEGIT_REGISTER_TRACKER(wrappers.h OnlineBoostingTracker opencv)
+LEGIT_REGISTER_TRACKER(wrappers.h MILTracker opencv)
diff --git a/src/trackers/wrappers/CMakeLists.txt b/src/trackers/wrappers/CMakeLists.txt
index e4d5f14..73d77c7 100644
--- a/src/trackers/wrappers/CMakeLists.txt
+++ b/src/trackers/wrappers/CMakeLists.txt
@@ -1,7 +1,7 @@
 CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
 
-LEGIT_ADD_SOURCES( 
+LEGIT_ADD_SOURCES(
 	focus.cpp
 )
 
-LEGIT_REGISTER_TRACKER(focus.h FocusWrapper)
+LEGIT_REGISTER_TRACKER(focus.h FocusWrapper wrappers)
